<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html">
    <body>

        <ui:composition template="./masterTemplate.xhtml">
            <!-- Client CSS/JS-->
            <ui:define name="TemplateClientHeader">
               <!--Jquery-->
               <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>
               <script defer="defer" type="text/javascript" src="https://maps.googleapis.com/maps/api/js?signed_in=true&amp;callback=initMap"></script>
               <!-- Google Maps API-->
               <style>

      #map {
            width: 96%;
            height: 90%;
            position: absolute;
            left: 2%;
            margin-top: 5px;
      }
      #tableInfoBox td{
          padding:4px;
      }

               </style>
<script type="text/javascript">
        var map;
        //Color range red to green
       // var colorGradient=["#E50009","#E02B00","#DB5E00","#D68F00","#D2BE00","#AFCD00","#7BC800","#4AC300","#1BBF00"];
        var colorGradient=["#E50009","#A13F06","#5E7F03","#1BBF00"];

        //var colorGradient=["#E50009","#D88000","#D88000","#1BBF00"];
        var acuteHospLayerActive=false;
        var commHospLayerActive=false;
        var careHomeLayerActive=false;
        var ihfdLayerActive=false;
        var popLayerActive=false;
        var popGt65LayerActive=false;
        var avgLOSLayerActive=false;
        var mortalityLayerActive=false;
        var fragilityLayerActive=false;
        var infoBoxVisible=false;
        function  GetCurrentLayerColor(feature){
         var color;
        if(ihfdLayerActive==true){
              var ihfdIndex = feature.getProperty('IHFDIndex');  
               color=colorGradient[ihfdIndex-1]; 
        }
        else if(popGt65LayerActive==true){
               var populationGt65Index = feature.getProperty('PopulationGt65Index');  
               color=colorGradient[populationGt65Index-1]; 
        }
        else if(popLayerActive==true){
                var populationIndex = feature.getProperty('PopulationIndex');  
                color=colorGradient[populationIndex-1]; 
        }
        else if(avgLOSLayerActive==true){
                var avgLOSIndex = feature.getProperty('AvgLOSIndex');  
                color=colorGradient[avgLOSIndex-1]; 
        }
        else if(mortalityLayerActive==true){
             var mortalityIndex = feature.getProperty('MortalityIndex');  
             color=colorGradient[mortalityIndex-1]; 
        }
        else if(fragilityLayerActive==true){
             var fragilityIndex = feature.getProperty('FragilityIndex');  
             color=colorGradient[fragilityIndex-1]; 
        }
        else{
            color=feature.getProperty('Color');
        }
        return color;
        }
        function AddCHOLayer(){
         //Setting the fill color of ecah CHO according to the 'color' property value in the GeoJson file 
            var choLayer=   map.data.loadGeoJson('GeoJSONLayers/CHOs.json');
            map.data.addGeoJson(choLayer);
        //Setting the fill color of ecah CHO according to the 'color' property value in the GeoJson file 
            map.data.setStyle(function (feature) {
                var color = feature.getProperty('Color');
                return {
                    fillColor: color,
                    fillOpacity: 0.8,
                    strokeWeight: 1,
                    zIndex: 10
                };
            });
    }    
        function AddAcuteHospLayer(){
            acuteHospLayerActive=true;
            var acuteHospLayer = map.data.loadGeoJson('GeoJSONLayers/AcuteHospitals.json');
            map.data.addGeoJson(acuteHospLayer);
            map.data.setStyle(function (feature) {
            var color = GetCurrentLayerColor(feature);
               var hospitalName = feature.getProperty('Name');
                var iconFile = feature.getProperty('icon'); 
                return {
                    title: hospitalName,
                    icon:iconFile,
                    zIndex: 2000,
                    clickable: true,
                    fillColor: color,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
        }
        function AddCommHospLayer(){
            commHospLayerActive=true;
            var commHospLayer = map.data.loadGeoJson('GeoJSONLayers/CommHospitals.json');
            map.data.addGeoJson(commHospLayer);
            map.data.setStyle(function (feature) {
            var color = GetCurrentLayerColor(feature);
            var hospitalName = feature.getProperty('Name');
            var iconFile = feature.getProperty('icon'); 
                return {
                    title: hospitalName,
                    icon:iconFile,
                    zIndex: 1000,
                    clickable: true,
                    fillColor: color,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
        }
        function AddCareHomeLayer(){
            careHomeLayerActive=true;
            var careHomeLayer = map.data.loadGeoJson('GeoJSONLayers/CareHomes.json');
            map.data.addGeoJson(careHomeLayer);
            map.data.setStyle(function (feature) {
                var color = GetCurrentLayerColor(feature);
                var hospitalName = feature.getProperty('Name');
                var iconFile = feature.getProperty('icon'); 
                return {
                    title: hospitalName,
                    icon:iconFile,
                    zIndex: 1000,
                    clickable: true,
                    fillColor: color,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
            
        }
        function AddIHFDIndexLayer(){
            ReloadLayers();
            ihfdLayerActive=true;
            popLayerActive=false;
            popGt65LayerActive=false;
            avgLOSLayerActive=false;
            mortalityLayerActive=false;
            fragilityLayerActive=false;
            map.data.setStyle(function (feature) {
                var ihfdIndex = feature.getProperty('IHFDIndex');
                var iconFile = feature.getProperty('icon');       
            return {
                        fillColor: colorGradient[ihfdIndex-1],
                        icon:iconFile,
                        fillOpacity: 0.8,
                        strokeWeight: 1
                    };
                });
            }
        function AddPopIndexLayer(){
            ReloadLayers();
            popLayerActive=true;
            popGt65LayerActive=false;
            ihfdLayerActive=false;
            avgLOSLayerActive=false;
            mortalityLayerActive=false;
            fragilityLayerActive=false;
            map.data.setStyle(function (feature) {
                var populationIndex = feature.getProperty('PopulationIndex');
                var iconFile = feature.getProperty('icon');            
                return {
                        fillColor: colorGradient[populationIndex-1],
                        icon:iconFile,
                        fillOpacity: 0.8,
                        strokeWeight: 1
                        };
                });
            } 
        function AddPopGt65IndexLayer(){
            ReloadLayers();
            popGt65LayerActive=true;
            popLayerActive=false;
            ihfdLayerActive=false;
            avgLOSLayerActive=false;
            mortalityLayerActive=false;
            fragilityLayerActive=false;
                map.data.setStyle(function (feature) {
                    var populationGt65Index = feature.getProperty('PopulationGt65Index');
                    var iconFile = feature.getProperty('icon');        
                    return {
                        fillColor: colorGradient[populationGt65Index-1],
                        icon:iconFile,
                        fillOpacity: 0.8,
                        strokeWeight: 1
                    };
                });
            }
        function AddAvgLOSIndexLayer(){
        ReloadLayers();
        avgLOSLayerActive=true;
        popGt65LayerActive=false;
        popLayerActive=false;
        ihfdLayerActive=false;
        mortalityLayerActive=false;
        fragilityLayerActive=false;
            map.data.setStyle(function (feature) {
                 var avgLOSIndex = feature.getProperty('AvgLOSIndex');  
                color=colorGradient[avgLOSIndex-1]; 
                var iconFile = feature.getProperty('icon');        

                return {
                    fillColor: colorGradient[avgLOSIndex-1],
                    icon:iconFile,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
        }
        function AddMortalityIndexLayer(){
        ReloadLayers();
        mortalityLayerActive=true;
        popGt65LayerActive=false;
        popLayerActive=false;
        ihfdLayerActive=false;
        avgLOSLayerActive=false;
        fragilityLayerActive=false;
            map.data.setStyle(function (feature) {
                 var mortalityIndex = feature.getProperty('MortalityIndex');  
                color=colorGradient[mortalityIndex-1]; 
                var iconFile = feature.getProperty('icon');        
                return {
                    fillColor: colorGradient[mortalityIndex-1],
                    icon:iconFile,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
        }       
        function AddFragilityIndexLayer(){
        ReloadLayers();
        fragilityLayerActive=true;
        popGt65LayerActive=false;
        popLayerActive=false;
        ihfdLayerActive=false;
        avgLOSLayerActive=false;
        mortalityLayerActive=false;
            map.data.setStyle(function (feature) {
                 var fragilityIndex = feature.getProperty('FragilityIndex');  
                color=colorGradient[fragilityIndex-1]; 
                var iconFile = feature.getProperty('icon');        
                return {
                    fillColor: colorGradient[fragilityIndex-1],
                    icon:iconFile,
                    fillOpacity: 0.8,
                    strokeWeight: 1
                };
            });
        }          
        function ShowInfoBox(event) {
         if(infoBoxVisible==true){
         //Getting current cursor position    
         var   xPos = event.clientX;
         var   yPos = event.clientY;
         //Setting the new InfoBox position as the cursor's
            document.getElementById("infoBox").style.top=yPos+"px";
            document.getElementById("infoBox").style.left=xPos+"px";
            }
            else
               $("#infoBox").fadeTo("fast", 0);
        }
        function ResetMap(){
        acuteHospLayerActive=false;
        commHospLayerActive=false;
        careHomeLayerActive=false;
        ihfdLayerActive=false;
        popLayerActive=false;
        popGt65LayerActive=false;
        avgLOSLayerActive=false;
        mortalityLayerActive=false;
        fragilityLayerActive=false;
        map.data.forEach(function(feature) {
        //If you want, check here for some constraints.
        map.data.remove(feature);
    });
    }  
         function ReloadLayers(){    
            map.data.forEach(function(feature) {
              //If you want, check here for some constraints.
              map.data.remove(feature);

          });
            //Setting the fill color of ecah CHO according to the 'color' property value in the GeoJson file 
            var choLayer=   map.data.loadGeoJson('GeoJSONLayers/CHOs.json');
            map.data.addGeoJson(choLayer);
            if(acuteHospLayerActive==true){
                var acuteHospLayer = map.data.loadGeoJson('GeoJSONLayers/AcuteHospitals.json');
                map.data.addGeoJson(acuteHospLayer); 
            }
            if(commHospLayerActive==true){
                var commHospLayer = map.data.loadGeoJson('GeoJSONLayers/CommHospitals.json');
                map.data.addGeoJson(commHospLayer);
            }
            if(careHomeLayerActive==true){
                var careHomeLayer = map.data.loadGeoJson('GeoJSONLayers/CareHomes.json');
                map.data.addGeoJson(careHomeLayer);
             }
    }
         function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 7,
                //Ireland inital coordinates
                center: { lat: 53.2734, lng: -7.778320310000026 }
            });
            //Adding the initial CHO layer
            AddCHOLayer();
            //Seeting the map mouse events
            map.data.addListener('mouseover', function (event) {
                //alert(event.feature.getProperty('CommHospitalName'));
                map.data.overrideStyle(event.feature, { fillColor: 'black' });       

            });
            map.data.addListener('click', function (event) {
                //Display infobox fields
                infoBoxVisible=true;
                var name = event.feature.getProperty('Name');
                if(name.indexOf("CHO") > -1){//Cecks if the selected element is a CHO region
                var population=event.feature.getProperty('Population');
                var populationGt65=event.feature.getProperty('PopulationGt65');
                var mortality=event.feature.getProperty('Mortality');
                document.getElementById('spanPopulation').innerHTML = population;
                document.getElementById('spanPopulation65').innerHTML = populationGt65;
                document.getElementById('spanMortality').innerHTML = mortality;

             }
            else{
                document.getElementById('population').innerHTML = "";
                document.getElementById('population65').innerHTML = ""; 
                document.getElementById('mortality').innerHTML="";
            }
                var patientCount=event.feature.getProperty('PatientCount');
                var patientsAged65=event.feature.getProperty('PatientsAged65');
                var malePatients=event.feature.getProperty('MalePatients');
                var femalePatients=event.feature.getProperty('FemalePatients');
                var fragilityHistory=event.feature.getProperty('FragilityCount');        
                var admittedWithin4hrs=event.feature.getProperty('AdmittedWithin4hrs');
                var surgeryWithin48hrs = event.feature.getProperty('SurgeryWithin48hrs');
                var avgLOS=event.feature.getProperty('AvgLOS');

                document.getElementById('spanTitle').innerHTML = name;
                document.getElementById('spanPatientCount').innerHTML = patientCount;
                document.getElementById('spanPatientsAged65').innerHTML = patientsAged65;
                document.getElementById('spanMalePatients').innerHTML = malePatients;
                document.getElementById('spanFemalePatients').innerHTML = femalePatients;
                document.getElementById('spanFragility').innerHTML = fragilityHistory;
                document.getElementById('spanAdmittedWithin4hrs').innerHTML = admittedWithin4hrs;
                document.getElementById('spanSurgeryWithin48hrs').innerHTML = surgeryWithin48hrs;
                document.getElementById('spanAvgLOS').innerHTML = avgLOS;
                //Showing infoBox
                $("#infoBox").fadeTo("medium", 0.9);
            });
               //Setting original fill color on 'mouse-out' event
                map.data.addListener('mouseout', function (event) {
                //Setting 'infoBoxVisible' to false to hide the infoBox
                infoBoxVisible=false;    
                if(ihfdLayerActive==true)
                {
                     var ihfdIndex = event.feature.getProperty('IHFDIndex');              
                     map.data.overrideStyle(event.feature, { fillColor: colorGradient[ihfdIndex-1] });
                }
                else if(popLayerActive==true){
                    var populationIndex = event.feature.getProperty('PopulationIndex');  
                    map.data.overrideStyle(event.feature, { fillColor: colorGradient[populationIndex-1] });    
                }
                else if(popGt65LayerActive==true){
                     var populationGt65Index = event.feature.getProperty('PopulationGt65Index');            
                     map.data.overrideStyle(event.feature, { fillColor: colorGradient[populationGt65Index-1] });    
                }
                else if(avgLOSLayerActive==true){
                    var avgLOSIndex = event.feature.getProperty('AvgLOSIndex');  
                    map.data.overrideStyle(event.feature, { fillColor: colorGradient[avgLOSIndex-1] });  
                }
                else if(mortalityLayerActive==true){
                    var mortalityIndex = event.feature.getProperty('MortalityIndex');  
                    map.data.overrideStyle(event.feature, { fillColor: colorGradient[mortalityIndex-1] });  
                }
                else if(fragilityLayerActive==true){
                    var fragilityIndex = event.feature.getProperty('FragilityIndex');  
                    map.data.overrideStyle(event.feature, { fillColor: colorGradient[fragilityIndex-1] });   
                }
                else{
                   var color = event.feature.getProperty('Color');
                    map.data.overrideStyle(event.feature, { fillColor: color });
                }
        });  
 
    }
function AddMapLayer(){
    var dropdownLayers = document.getElementById("dropdownLayers");
    var selectedLayer = dropdownLayers.options[dropdownLayers.selectedIndex].value;
switch(selectedLayer) {
    case "PopulationLayer":
        AddPopIndexLayer();
        break;
    case "PopAged65Layer":
        AddPopGt65IndexLayer();
        break;
    case "HipFracCountLayer":
        AddIHFDIndexLayer();
        break;
    case "LOSLayer":
        AddAvgLOSIndexLayer();
        break;
    case "MortalityLayer":
        AddMortalityIndexLayer();
        break;
    case "FragilityLayer":
        AddFragilityIndexLayer();
        break;
    case "AcuteLayer":
        AddAcuteHospLayer();
        break;
    case "CommLayer":
        AddCommHospLayer();
        break;
    case "CareHomeLayer":
        AddCareHomeLayer();
        break;   
} 
}
    </script>
            </ui:define>
            <ui:define name="content">
                <div class="row">

                    <div class="col-md-13">
                        <div style="margin-left: 2%;">
                        <label style="float:left;padding-top: 8px;padding-right: 8px;">Map Layers:</label>
                        <select id="dropdownLayers" class="form-control" style="width:240px;display: inline" >
                             <option value="PopulationLayer">Population</option>
                             <option value="PopAged65Layer">Population Aged 65 or over</option>
                             <option value="HipFracCountLayer">Count of Hip Fracture Cases</option>
                             <option value="LOSLayer">Average Length of Stay</option>
                             <option value="MortalityLayer">%Patients Mortality</option>
                             <option value="FragilityLayer">%Patients with Fragility History</option>
                            <option value="AcuteLayer">Acute Hospitals</option>
                            <option value="CommLayer">Community Hospitals</option>
                            <option value="CareHomeLayer">Care Homes</option>
                        </select>
                        <button type="button" class="btn btn-default" onclick="AddMapLayer()">Add Layer</button>
                        <button type="button" class="btn btn-default" onclick="ResetMap();AddCHOLayer();">Reset Map</button>
                        </div>
                        <div id="map" onclick="ShowInfoBox(event)"></div>
                    
                    </div>  
                    
                </div>
                
                <div id="infoBox" class="panel panel-default" style="position:absolute;left:3%;top:15%;width:385px;z-index: 10;display: none">   
                    <div class="panel-body">
                        <table id="tableInfoBox" class="table table-striped table-bordered" style="font-size:12px;margin-bottom: 0px">
                            <tr>
                                <td colspan="2"><span id="spanTitle" style="font-size: 13px;font-weight: bold"></span></td>
                            </tr>
                            <tr id="population">
                             <td>Population</td><td><span id="spanPopulation"></span></td>
                            </tr>
                            <tr id="population65">
                             <td>Population >=65</td><td><span id="spanPopulation65"></span></td>
                            </tr>
                            <tr>
                                <td>No. of Hip Fracture Cases</td><td><span id="spanPatientCount"></span></td>
                            </tr>
                            <tr>
                                <td>%Patients aged ≥ 65</td> <td><span id="spanPatientsAged65"></span></td>
                            </tr>
                            <tr>
                                <td>%Male Patients</td> <td><span id="spanMalePatients"></span></td>
                            </tr>
                            <tr>
                                <td>%Female Patients</td> <td><span id="spanFemalePatients"></span></td>
                            </tr>
                            <tr>
                                <td>%Patients with Fragility History</td> <td><span id="spanFragility"></span></td>
                            </tr>
                            
                            <tr>
                                <td>%Admitted within 4 hrs</td> <td><span id="spanAdmittedWithin4hrs"></span></td>
                            </tr>
                            <tr>
                                <td>%Primary Surgery within 48 hrs</td> <td><span id="spanSurgeryWithin48hrs"></span></td>
                            </tr>
                            <tr id="mortality">
                                <td>Mortality</td> <td><span id="spanMortality"></span></td>
                            </tr>
                            <tr>
                                <td>Average LOS</td> <td><span id="spanAvgLOS"></span></td>
                            </tr>

                        </table>
                    </div>
                </div>
                
            </ui:define>

        </ui:composition>

    </body>
</html>
